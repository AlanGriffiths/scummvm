name: scummvm
base: core18
license: GPL-2.0
adopt-info: scummvm
summary: ScummVM
description: |
    ScummVM is a program which allows you to run certain classic graphical
    point-and-click adventure games, provided you already have their data
    files. The clever part about this: ScummVM just replaces the executables
    shipped with the game, allowing you to play them on systems for which
    they were never designed!

    Currently, ScummVM supports a huge library of adventures with over
    250 games in total.
    
    It supports many classics published by legendary studios like LucasArts,
    Sierra On-Line, Revolution Software, Cyan, Inc. and Westwood Studios.
    Next to ground-breaking titles like the Monkey Island series,
    Broken Sword, Myst, Blade Runner and countless other games,
    you will find some really obscure adventures and truly hidden gems to explore.
confinement: strict
grade: stable

apps:
  scummvm:
    command-chain: ["snap/command-chain/alsa-launch"]
    command: desktop-launch $SNAP/bin/wayland-if-possible.sh $SNAP/bin/scummvm
    plugs:
      - x11
      - unity7
      - home

  daemon:
    command-chain: ["snap/command-chain/alsa-launch"]
    command: daemon-start.sh $SNAP/bin/scummvm -f
    environment:
      SDL_VIDEODRIVER: wayland
      LD_LIBRARY_PATH: "$LD_LIBRARY_PATH:$SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/libunity/"
    daemon: simple
    restart-condition: always

plugs:
  wayland:
  opengl:
  alsa:
  audio-playback:
  network:
  network-bind:
  removable-media:

  gtk-3-themes:
    default-provider: gtk-common-themes:gtk-3-themes
    interface: content
    target: $SNAP/data-dir/themes
  sound-themes:
    default-provider: gtk-common-themes:sound-themes
    interface: content
    target: $SNAP/data-dir/sounds
  gnome-3-28-1804:
    default-provider: gnome-3-28-1804:gnome-3-28-1804
    interface: content
    target: $SNAP/gnome-platform
  icon-themes:
    default-provider: gtk-common-themes:icon-themes
    interface: content
    target: $SNAP/data-dir/icons

layout:
  /usr/share/glvnd/egl_vendor.d:
    bind: $SNAP/usr/share/glvnd/egl_vendor.d
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri
  /usr/share/X11/xkb:
    bind: $SNAP/usr/share/X11/xkb

parts:
  scummvm:
    after: [alsa-mixin, desktop-gtk]
    source: https://github.com/scummvm/scummvm.git
    override-build: |
      last_committed_tag="$(git tag --list | tac | head -n1)"
      trimmed_tag="$(echo $last_committed_tag | sed 's/desc\///' | sed 's/git//' | sed 's/^v//')"
      last_released_tag="$(snap info scummvm | awk '$1 == "beta:" { print $2 }')"
      # If the latest tag from the upstream project has not been released to
      # beta, build that tag instead of master.
      if [ "${trimmed_tag}" != "${last_released_tag}" ]; then
        git fetch
        git checkout "${last_committed_tag}"
        snapcraftctl set-version $(git -C ../src tag --list | tac | head -n1 | sed 's/desc\///' | sed 's/git//' | sed 's/^v//')
      else
        snapcraftctl set-version $(git -C ../src describe | sed 's/desc\///')
      fi    
      snapcraftctl build
      
    plugin: autotools
    configflags:
      - --enable-release
      - --enable-opl2lpt
      - --disable-debug

#    To do a quick test build
#    configflags:
#      - --disable-all-engines
#      - --enable-engine=scumm

    build-packages:
      - g++
      - make
      - libsdl2-dev
      - libgtk-3-dev
      - libjpeg62-dev
      - libmpeg2-4-dev
      - liba52-dev
      - libogg-dev
      - libvorbis-dev
      - libflac-dev
      - libmad0-dev
      - libpng-dev
      - libtheora-dev
      - libfaad-dev
      - libfluidsynth-dev
      - libfreetype6-dev
      - zlib1g-dev
      - libunity-dev
      - libcurl4-openssl-dev
      - libsdl2-net-dev
      - libieee1284-3-dev
    stage-packages:
      - libicu60
      - libfaad2
      - libflac8
      - libfluidsynth1
      - libgl1-mesa-dri
      - libgl1-mesa-glx
      - libglu1-mesa
      - libwayland-egl1-mesa
      - libjpeg62
      - libjpeg8
      - libmad0
      - libmpeg2-4
      - libogg0
      - libpng16-16
      - libsdl2-2.0-0
      - libsndio6.1
      - libstdc++6
      - libtheora0
      - libvorbis0a
      - libvorbisfile3
      - zlib1g
      - libdbusmenu-glib4
      - libdee-1.0-4
      - libslang2
      - libunity-protocol-private0
      - libunity9
      - freeglut3
      - libcurl4
      - libsdl2-net-2.0-0
      - liba52-0.7.4
      - libieee1284-3
      - locales-all

  alsa-mixin:
    plugin: nil
    source: https://github.com/diddlesnaps/snapcraft-alsa.git
    override-pull: |
      cat > asound.conf <<EOF
      pcm.!default {
          type pulse
          fallback "sysdefault"
          hint {
              show on
              description "Default ALSA Output (currently PulseAudio Sound Server)"
          }
      }
      ctl.!default {
          type pulse
          fallback "sysdefault"
      }
      seq.default {
          type hw
      }
      seq.hw {
          type hw
      }
      EOF
      cat > alsa-launch <<EOF
      #!/bin/bash
      export ALSA_CONFIG_PATH="\$SNAP/etc/asound.conf"

      if [ -d "\$SNAP/usr/lib/alsa-lib" ]; then
          export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:\$SNAP/usr/lib/alsa-lib"
      elif [ -d "\$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib" ]; then
          export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:\$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib"
      fi
      export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:\$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio"

      # Make PulseAudio socket available inside the snap-specific \$XDG_RUNTIME_DIR
      if [ -n "\$XDG_RUNTIME_DIR" ]; then
          pulsenative="pulse/native"
          pulseaudio_sockpath="\$XDG_RUNTIME_DIR/../\$pulsenative"
          if [ -S "\$pulseaudio_sockpath" ]; then
              export PULSE_SERVER="unix:\${pulseaudio_sockpath}"
          fi
      fi

      exec "\$@"
      EOF
      chmod +x alsa-launch
    override-build: |
      snapcraftctl build
      install -m644 -D -t $SNAPCRAFT_PART_INSTALL/etc asound.conf
      install -m755 -D -t $SNAPCRAFT_PART_INSTALL/snap/command-chain alsa-launch
    build-packages:
      - libasound2-dev
    stage-packages:
      - libasound2
      - libasound2-plugins

  desktop-gtk:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: gtk
    plugin: make
    build-packages:
      - build-essential

    stage-packages:
      - libxkbcommon0
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - adwaita-icon-theme
      - gnome-themes-standard
      - shared-mime-info
      - locales-all
      - xdg-user-dirs
      - libcanberra-gtk3-module
      - libgdk-pixbuf2.0-0

  scripts:
    plugin: dump
    source: scripts
